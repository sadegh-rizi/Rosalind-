# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ncbi/datasets/v2/datasets_service.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from ncbi.datasets.v2 import datasets_pb2 as ncbi_dot_datasets_dot_v2_dot_datasets__pb2
from ncbi.datasets.v2.reports import assembly_pb2 as ncbi_dot_datasets_dot_v2_dot_reports_dot_assembly__pb2
from ncbi.datasets.v2.reports import feature_pb2 as ncbi_dot_datasets_dot_v2_dot_reports_dot_feature__pb2
from ncbi.datasets.v2.reports import gene_pb2 as ncbi_dot_datasets_dot_v2_dot_reports_dot_gene__pb2
from ncbi.datasets.v2.reports import virus_pb2 as ncbi_dot_datasets_dot_v2_dot_reports_dot_virus__pb2
from ncbi.datasets.v2.reports import virus_annotation_pb2 as ncbi_dot_datasets_dot_v2_dot_reports_dot_virus__annotation__pb2
from ncbi.datasets.options import openapi_pb2 as ncbi_dot_datasets_dot_options_dot_openapi__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='ncbi/datasets/v2/datasets_service.proto',
  package='ncbi.datasets.v2',
  syntax='proto3',
  serialized_options=b'Z\020ncbi/datasets/v2\370\001\001\302\360\031\t\n\007v2alpha',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\'ncbi/datasets/v2/datasets_service.proto\x12\x10ncbi.datasets.v2\x1a\x1egoogle/protobuf/wrappers.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fncbi/datasets/v2/datasets.proto\x1a\'ncbi/datasets/v2/reports/assembly.proto\x1a&ncbi/datasets/v2/reports/feature.proto\x1a#ncbi/datasets/v2/reports/gene.proto\x1a$ncbi/datasets/v2/reports/virus.proto\x1a/ncbi/datasets/v2/reports/virus_annotation.proto\x1a#ncbi/datasets/options/openapi.proto2\xbe%\n\x0f\x41ssemblyDataset\x12\xa9\x05\n\x12GetDownloadSummary\x12(.ncbi.datasets.v2.AssemblyDatasetRequest\x1a!.ncbi.datasets.v2.DownloadSummary\"\xc5\x04\xc2\xf0\x19\xc0\x04\n\xd2\x01\x08\x01\x12\x37/v2alpha/genome/accession/{accessions}/download_summary*\x1fPreview genome dataset download2<Get a download summary by accession in a JSON output format.:\x17genome_download_summaryB\x06GenomeJ\x08hydratedJ\x0binclude_tsv\n\xe8\x02\x08\x02\x12 /v2alpha/genome/download_summary*\'Preview genome dataset download by POST2\xef\x01The \'GET\' version of download summary is limited by the size of the GET URL (2KB, which works out to about 140 genomic accessions).  The POST operation is provided to allow users to supply a larger number of accessions in a single request.:\x1fgenome_download_summary_by_postB\x06Genome\x12\x8e\x0e\n\x16GetAssemblyDataReports\x12/.ncbi.datasets.v2.AssemblyDatasetReportsRequest\x1a\x30.ncbi.datasets.v2.reports.AssemblyDataReportPage\"\x90\r\xc2\xf0\x19\x8b\r\n\xa5\x03\x08\x01\x12\x35/v2alpha/genome/accession/{accessions}/dataset_report*!Get dataset reports by accessions2\x9b\x01Get dataset reports by accessions.  By default, in paged JSON format, but also available as tabular (accept: x-tabular) or json-lines (accept: x-jsonlines):\x15genome_dataset_reportB\x06GenomeJ\x08hydratedJ\x0binclude_tsvJ\x0ctable_formatJ\x06taxonsJ\x0b\x62ioprojectsJ\x04sortZ\x1bv2reportsAssemblyDataReporth\x01r\x10\x61pplication/jsonr\x19text/tab-separated-values\n\xa1\x03\x08\x01\x12-/v2alpha/genome/taxon/{taxons}/dataset_report*\x1dGet dataset reports by taxons2\x97\x01Get dataset reports by taxons.  By default, in paged JSON format, but also available as tabular (accept: x-tabular) or json-lines (accept: x-jsonlines):\x1fgenome_dataset_reports_by_taxonB\x06GenomeJ\x08hydratedJ\x0binclude_tsvJ\x0ctable_formatJ\naccessionsJ\x0f\x62ioprojectssortZ\x1bv2reportsAssemblyDataReporth\x01r\x10\x61pplication/jsonr\x19text/tab-separated-values\n\xb6\x03\x08\x01\x12\x37/v2alpha/genome/bioproject/{bioprojects}/dataset_report*!Get dataset reports by bioproject2\x9c\x01Get dataset reports by bioprojects.  By default, in paged JSON format, but also available as tabular (accept: x-tabular) or json-lines (accept: x-jsonlines):$genome_dataset_reports_by_bioprojectB\x06GenomeJ\x08hydratedJ\x0binclude_tsvJ\x0ctable_formatJ\x06taxonsJ\naccessionsJ\x04sortZ\x1bv2reportsAssemblyDataReporth\x01r\x10\x61pplication/jsonr\x19text/tab-separated-values\n\x83\x03\x08\x02\x12\x1e/v2alpha/genome/dataset_report*!Get dataset reports by accessions2\x9b\x01Get a dataset report by accession.  By default, in paged JSON format, but also available as tabular (accept: x-tabular) or json-lines (accept: x-jsonlines):\x1dgenome_dataset_report_by_postB\x06GenomeJ\x08hydratedJ\x0binclude_tsvJ\x0ctable_formatJ\x06taxonsZ\x1bv2reportsAssemblyDataReporth\x01r\x10\x61pplication/jsonr\x19text/tab-separated-values\x12\xc8\x02\n\x1aGetAssemblyRevisionHistory\x12\x30.ncbi.datasets.v2.AssemblyRevisionHistoryRequest\x1a).ncbi.datasets.v2.AssemblyRevisionHistory\"\xcc\x01\xc2\xf0\x19\xc7\x01\n\xc4\x01\x08\x01\x12\x36/v2alpha/genome/accession/{accession}/revision_history*.Get revision history for assembly by accession2.Get revision history for assembly by accession: assembly_revision_history_by_getB\x06Genome\x12\x8b\x08\n\x12GetSequenceReports\x12\x30.ncbi.datasets.v2.AssemblySequenceReportsRequest\x1a$.ncbi.datasets.v2.SequenceReportPage\"\x9c\x07\xc2\xf0\x19\x97\x07\n\xe3\x03\x08\x01\x12\x36/v2alpha/genome/accession/{accession}/sequence_reports*\"Get sequence reports by accessions2\xb5\x01Get a sequence report by accession.  By default, in paged JSON format, but also available as tabular (accept: text/tab-separated-values) or json-lines (accept: application/x-ndjson):\x16genome_sequence_reportB\x06GenomeJ\x0ctable_formatZ\x15v2reportsSequenceInfoh\x01r\x10\x61pplication/jsonrAapplication/vnd.openxmlformats-officedocument.spreadsheetml.sheetr\x19text/tab-separated-valuesr\x14\x61pplication/x-ndjson\n\xae\x03\x08\x02\x12 /v2alpha/genome/sequence_reports*\"Get sequence reports by accessions2\x9c\x01Get a sequence report by accession.  By default, in paged JSON format, but also available as tabular (accept: x-tabular) or json-lines (accept: x-jsonlines):\x1egenome_sequence_report_by_postB\x06GenomeZ\x15v2reportsSequenceInfoh\x01r\x10\x61pplication/jsonrAapplication/vnd.openxmlformats-officedocument.spreadsheetml.sheetr\x19text/tab-separated-valuesr\x14\x61pplication/x-ndjson\x12\x9a\x02\n\x10GetAssemblyLinks\x12&.ncbi.datasets.v2.AssemblyLinksRequest\x1a$.ncbi.datasets.v2.AssemblyLinksReply\"\xb7\x01\xc2\xf0\x19\xb2\x01\n\xaf\x01\x08\x01\x12,/v2alpha/genome/accession/{accessions}/links* Get assembly links by accessions28Get links to available assembly resources by accessions.:\x19genome_links_by_accessionB\x06Genome\x12\xf1\x02\n\x12GetCheckMHistogram\x12\x30.ncbi.datasets.v2.AssemblyCheckMHistogramRequest\x1a..ncbi.datasets.v2.AssemblyCheckMHistogramReply\"\xf8\x01\xc2\xf0\x19\xf3\x01\n\xf0\x01\x08\x01\x12\x36/v2alpha/genome/taxon/{species_taxon}/checkm_histogram*%Get CheckM histogram by species taxon2jGet CheckM histogram by species taxon. CheckM histograms are only available for certain bacterial species.:\x19\x63heckm_histogram_by_taxonB\x06Genome\x12y\n\x05Sleep\x12\x1e.ncbi.datasets.v2.SleepRequest\x1a\x1c.ncbi.datasets.v2.SleepReply\"2\xc2\xf0\x19.\n,\x08\x01\"(/v2alpha/sleep/{sleep_msec}/{error_rate}\x12\x88\x01\n\x0bSleepStream\x12\x1e.ncbi.datasets.v2.SleepRequest\x1a\x1c.ncbi.datasets.v2.SleepReply\"9\xc2\xf0\x19\x35\n3\x08\x01\"//v2alpha/sleep/stream/{sleep_msec}/{error_rate}0\x01\x32\x9b\r\n\rVirusDownload\x12\x92\x08\n\x15GetVirusDatasetStream\x12%.ncbi.datasets.v2.VirusDatasetRequest\x1a\x1b.google.protobuf.BytesValue\"\xb2\x07\xc2\xf0\x19\xad\x07\n\xec\x01\x08\x01\x12,/v2alpha/virus/taxon/{taxon}/genome/download*.Download a coronavirus genome dataset by taxon2.Download a coronavirus genome dataset by taxon:\x15virus_genome_downloadB\x05VirusJ\taccessionJ\naccessionsJ\x0ctable_fieldsJ\x06\x66ormatr\x0f\x61pplication/zip\n\x94\x02\x08\x01\x12\x35/v2alpha/virus/accession/{accessions}/genome/download*2Download a coronavirus genome dataset by accession22Download a coronavirus genome dataset by accession:\x1fvirus_genome_download_accessionB\x05VirusJ\x05taxonJ\x06tax_idJ\x08tax_nameJ\taccessionJ\x0ctable_fieldsJ\x06\x66ormatr\x0f\x61pplication/zip\n\xa4\x03\x08\x02\x12\x1e/v2alpha/virus/genome/download*(Get a coronavirus genome dataset by post2\xe7\x01The \'GET\' version of download is limited by the size of the GET URL (2KB, which works out to about 140 genomic accessions).  The POST operation is provided to allow users to supply a larger number of accessions in a single request.:\x1avirus_genome_download_postB\x05VirusJ\x05taxonJ\x06tax_idJ\x08tax_nameJ\taccessionJ\x0ctable_fieldsJ\x06\x66ormatr\x0f\x61pplication/zip0\x01\x12\xf4\x04\n\x1cGetSars2ProteinDatasetStream\x12,.ncbi.datasets.v2.Sars2ProteinDatasetRequest\x1a\x1b.google.protobuf.BytesValue\"\x86\x04\xc2\xf0\x19\x81\x04\n\xf2\x01\x08\x01\x12\x36/v2alpha/virus/taxon/sars2/protein/{proteins}/download*<Download SARS-CoV-2 protein and CDS datasets by protein name2$Download SARS-CoV-2 protein datasets:\x16sars2_protein_downloadB\x05VirusJ\x0ctable_fieldsJ\x0ctable_formatJ\x06\x66ormatr\x0f\x61pplication/zip\n\x89\x02\x08\x02\x12+/v2alpha/virus/taxon/sars2/protein/download*LDownload SARS-CoV-2 protein and CDS datasets by protein name by POST request21Download SARS-CoV-2 protein datasets POST request:\x1bsars2_protein_download_postB\x05VirusJ\x0ctable_fieldsJ\x0ctable_formatJ\x06\x66ormatr\x0f\x61pplication/zip0\x01\x32\x87 \n\x0f\x44\x61tasetDownload\x12\xdb\x05\n\x18GetAssemblyDatasetStream\x12(.ncbi.datasets.v2.AssemblyDatasetRequest\x1a\x1b.google.protobuf.BytesValue\"\xf5\x04\xc2\xf0\x19\xf0\x04\n\x80\x02\x08\x01\x12//v2alpha/genome/accession/{accessions}/download*!Get a genome dataset by accession2gDownload a genome dataset including fasta sequence, annotation and a detailed data report by accession.:\x19\x64ownload_assembly_packageB\x06GenomeJ\x0binclude_tsvr\x0f\x61pplication/zip\n\xea\x02\x08\x02\x12\x18/v2alpha/genome/download*\x1cGet a genome dataset by post2\xe7\x01The \'GET\' version of download is limited by the size of the GET URL (2KB, which works out to about 140 genomic accessions).  The POST operation is provided to allow users to supply a larger number of accessions in a single request.:\x1e\x64ownload_assembly_package_postB\x06GenomeJ\x0binclude_tsvr\x0f\x61pplication/zip0\x01\x12\xac\x05\n\x14GetGeneDatasetStream\x12$.ncbi.datasets.v2.GeneDatasetRequest\x1a\x1b.google.protobuf.BytesValue\"\xce\x04\xc2\xf0\x19\xc9\x04\n\xee\x02\x08\x01\x12$/v2alpha/gene/id/{gene_ids}/download*\x1dGet a gene dataset by gene ID2mGet a gene dataset including gene, transcript and protein fasta sequence, annotation and metadata by gene ID.:\x15\x64ownload_gene_packageB\x04GeneJ\x17symbols_for_taxon.taxonJ\x19symbols_for_taxon.symbolsJ\naccessionsJ\x05taxonJ\x05limitJ\x10returned_contentJ\x11sort_schema.fieldJ\x15sort_schema.directionr\x0f\x61pplication/zip\n\xd5\x01\x08\x02\x12\x16/v2alpha/gene/download*\x1aGet a gene dataset by POST2jGet a gene dataset including gene, transcript and protein fasta sequence, annotation and metadata by POST.:\x1a\x64ownload_gene_package_postB\x04Gener\x0f\x61pplication/zip0\x01\x12\xe7\x01\n\x1aGetMicroBiggeDatasetStream\x12*.ncbi.datasets.v2.MicroBiggeDatasetRequest\x1a\x1b.google.protobuf.BytesValue\"~\xc2\xf0\x19z\nE\x08\x01\"0/v2alpha/microbigge/{opaque_solr_query}/downloadr\x0f\x61pplication/zip\n1\x08\x02\"\x1c/v2alpha/microbigge/downloadr\x0f\x61pplication/zip0\x01\x12\xe2\x05\n\x1eGetProkaryoteGeneDatasetStream\x12\'.ncbi.datasets.v2.ProkaryoteGeneRequest\x1a\x1b.google.protobuf.BytesValue\"\xf7\x04\xc2\xf0\x19\xf2\x04\n\xb2\x02\x08\x01\x12\x30/v2alpha/protein/accession/{accessions}/download*9Get a prokaryote gene dataset by RefSeq protein accession2\x81\x01Get a prokaryote gene dataset including gene and protein fasta sequence, annotation and metadata by prokaryote protein accession.: download_prokaryote_gene_packageB\nProkaryoter\x0f\x61pplication/zip\n\xba\x02\x08\x02\x12#/v2alpha/protein/accession/download*AGet a prokaryote gene dataset by RefSeq protein accession by POST2\x89\x01Get a prokaryote gene dataset including gene and protein fasta sequence, annotation and metadata by prokaryote protein accession by POST.:%download_prokaryote_gene_package_postB\nProkaryoter\x0f\x61pplication/zip0\x01\x12\x84\x06\n GetGenomeAnnotationDatasetStream\x12).ncbi.datasets.v2.GenomeAnnotationRequest\x1a\x1b.google.protobuf.BytesValue\"\x95\x05\xc2\xf0\x19\x90\x05\n\xd7\x02\x08\x01\x1a\x36/v2alpha/genome/accession/{accession}/feature/download\"@/v2alpha/genome/accession/{accession}/annotation_report/download*-Get an annotation report dataset by accession2mDownload an annotation report including fasta sequence and a detailed annotation report by genomic accession.:\"download_genome_annotation_packageB\x06Genomer\x0f\x61pplication/zip\n\xb3\x02\x08\x02\x1a /v2alpha/genome/feature/download\"*/v2alpha/genome/annotation_report/download*-Get an annotation report dataset by accession2mDownload an annotation report including fasta sequence and a detailed annotation report by genomic accession.:*download_genome_annotation_package_by_postB\x06Genomer\x0f\x61pplication/zip0\x01\x12\x90\x07\n\x19\x43heckAssemblyAvailability\x12(.ncbi.datasets.v2.AssemblyDatasetRequest\x1a-.ncbi.datasets.v2.AssemblyDatasetAvailability\"\x99\x06\xc2\xf0\x19\x94\x06\n\xa2\x03\x08\x01\x12,/v2alpha/genome/accession/{accessions}/check*\'Check the validity of genome accessions2\xe4\x01The \'GET\' version of check is limited by the size of the GET URL (2KB, which works out to about 140 genomic accessions).  The POST operation is provided to allow users to supply a larger number of accessions in a single request.:\x1b\x63heck_assembly_availabilityB\x06GenomeJ\x0b\x63hromosomesJ\x17include_annotation_typeJ\x08hydratedJ\x0binclude_tsv\n\xec\x02\x08\x02\x12\x15/v2alpha/genome/check*@Check the validity of many genome accessions in a single request2\xe4\x01The \'GET\' version of check is limited by the size of the GET URL (2KB, which works out to about 140 genomic accessions).  The POST operation is provided to allow users to supply a larger number of accessions in a single request.: check_assembly_availability_postB\x06Genome2\xff \n\x0bGeneDataset\x12\x91\x12\n\x17GetGeneDataReportsPaged\x12+.ncbi.datasets.v2.GeneDatasetReportsRequest\x1a,.ncbi.datasets.v2.reports.GeneDataReportPage\"\x9a\x11\xc2\xf0\x19\x95\x11\n\xab\x03\x08\x01\x12\x1b/v2alpha/gene/id/{gene_ids}*\x1aGet gene reports by GeneID2\x95\x01Get a gene summary by GeneID. By default, in paged JSON format, but also available as tabular (accept: x-tabular) or json-lines (accept: x-jsonlines):\x12gene_reports_by_idB\x04GeneJ\x17symbols_for_taxon.taxonJ\x19symbols_for_taxon.symbolsJ\x11symbols_for_taxonJ\naccessionsJ\x05taxonJ\x05queryJ\x05typesJ\x0ctable_formatZ\x17v2reportsGeneDataReporth\x01r\x10\x61pplication/jsonr\x19text/tab-separated-values\n\xcf\x03\x08\x01\x12$/v2alpha/gene/accession/{accessions}*%Get gene metadata by RefSeq Accession2\x9f\x01Get a gene summary by RefSeq Accession. By default, in paged JSON format, but also available as tabular (accept: x-tabular) or json-lines (accept: x-jsonlines):\x1agene_metadata_by_accessionB\x04GeneJ\x17symbols_for_taxon.taxonJ\x19symbols_for_taxon.symbolsJ\x11symbols_for_taxonJ\x08gene_idsJ\x05taxonJ\x05queryJ\x05typesJ\x0ctable_formatZ\x17v2reportsGeneDataReporth\x01r\x10\x61pplication/jsonr\x19text/tab-separated-values\n\x86\x04\x08\x01\x12P/v2alpha/gene/symbol/{symbols_for_taxon.symbols}/taxon/{symbols_for_taxon.taxon}* Get gene metadata by gene symbol2\x9d\x01Get a gene summary by by gene symbol. By default, in paged JSON format, but also available as tabular (accept: x-tabular) or json-lines (accept: x-jsonlines):\x1fgene_metadata_by_tax_and_symbolB\x04GeneJ\naccessionsJ\x08gene_idsJ\x05taxonJ\x05queryJ\x05typesJ\x0ctable_formatR$\n\x19symbols_for_taxon.symbols\x12\x07symbolsR \n\x17symbols_for_taxon.taxon\x12\x05taxonZ\x17v2reportsGeneDataReporth\x01r\x10\x61pplication/jsonr\x19text/tab-separated-values\n\xe7\x03\x08\x01\x12\x1b/v2alpha/gene/taxon/{taxon}*(Get gene reports by taxonomic identifier2\xcb\x01Get a gene summary for a specified NCBI Taxonomy ID or name (common or scientific). By default, in paged JSON format, but also available as tabular (accept: x-tabular) or json-lines (accept: x-jsonlines):\x15gene_reports_by_taxonB\x04GeneJ\x17symbols_for_taxon.taxonJ\x19symbols_for_taxon.symbolsJ\x11symbols_for_taxonJ\naccessionsJ\x08gene_idsJ\x0ctable_formatZ\x17v2reportsGeneDataReporth\x01r\x10\x61pplication/jsonr\x19text/tab-separated-values\n\x9f\x02\x08\x02\x12\r/v2alpha/gene*\x19Get gene metadata as JSON2\x8b\x01Get a gene summary. By default, in paged JSON format, but also available as tabular (accept: x-tabular) or json-lines (accept: x-jsonlines):\x15gene_metadata_by_postB\x04GeneZ\x17v2reportsGeneDataReporth\x01r\x10\x61pplication/jsonr\x19text/tab-separated-values\x12\xb4\x03\n\x12GetDownloadSummary\x12$.ncbi.datasets.v2.GeneDatasetRequest\x1a!.ncbi.datasets.v2.DownloadSummary\"\xd4\x02\xc2\xf0\x19\xcf\x02\n\xb3\x01\x08\x01\x12,/v2alpha/gene/id/{gene_ids}/download_summary*#Get gene download summary by GeneID29Get a download summary by GeneID in a JSON output format.:\x1bgene_download_summary_by_idB\x04Gene\n\x96\x01\x08\x02\x12\x1e/v2alpha/gene/download_summary*\x19Get gene download summary22Get gene download summary in a JSON output format.:\x1dgene_download_summary_by_postB\x04Gene\x12\x94\x04\n\x14GetGeneCountsByTaxon\x12*.ncbi.datasets.v2.GeneCountsByTaxonRequest\x1a(.ncbi.datasets.v2.GeneCountsByTaxonReply\"\xa5\x03\xc2\xf0\x19\xa0\x03\n\xcd\x01\x08\x01\x12\"/v2alpha/gene/taxon/{taxon}/counts*\'Get gene counts by taxonomic identifier2_Get gene counts for a specified NCBI Taxonomy ID or name (common or scientific) in JSON format.:\x15gene_counts_for_taxonB\x04Gene\n\xcd\x01\x08\x02\x12\x1a/v2alpha/gene/taxon/counts*\'Get gene counts by taxonomic identifier2_Get gene counts for a specified NCBI Taxonomy ID or name (common or scientific) in JSON format.:\x1dgene_counts_for_taxon_by_postB\x04Gene\x12\x9b\x02\n\x0eGetOrthologSet\x12!.ncbi.datasets.v2.OrthologRequest\x1a,.ncbi.datasets.v2.reports.GeneDataReportPage\"\xb7\x01\xc2\xf0\x19\xb2\x01\n\xaf\x01\x08\x01\x12$/v2alpha/gene/id/{gene_id}/orthologs*\x1dGet gene orthologs by gene ID2JGet a gene summary for an ortholog set by gene ID in a JSON output format.:\x14gene_orthologs_by_idB\x04Gene\x12\xea\x01\n\x0cGetGeneLinks\x12\".ncbi.datasets.v2.GeneLinksRequest\x1a .ncbi.datasets.v2.GeneLinksReply\"\x93\x01\xc2\xf0\x19\x8e\x01\n\x8b\x01\x08\x01\x12!/v2alpha/gene/id/{gene_ids}/links*\x19Get gene links by gene ID21Get links to available gene resources by gene ID.:\x10gene_links_by_idB\x04Gene\x12\x82\x03\n(GetChromsomeSummaryForTaxonAndAnnotation\x12..ncbi.datasets.v2.GeneChromosomeSummaryRequest\x1a,.ncbi.datasets.v2.GeneChromosomeSummaryReply\"\xf7\x01\xc2\xf0\x19\xf2\x01\n\xef\x01\x08\x01\x12K/v2alpha/gene/taxon/{taxon}/annotation/{annotation_name}/chromosome_summary*>Get summary of chromosomes for a particular taxon\'s annotation2?Get summary of chromosomes for a particular taxon\'s annotation.:\x17gene_chromosome_summaryB\x04Gene2\xcc#\n\x0cVirusDataset\x12\xec\x02\n\x12GetDownloadSummary\x12%.ncbi.datasets.v2.VirusDatasetRequest\x1a!.ncbi.datasets.v2.DownloadSummary\"\x8b\x02\xc2\xf0\x19\x86\x02\n\x83\x02\x08\x01\x12#/v2alpha/virus/taxon/{taxon}/genome*3Get summary data for Coronaviridae genomes by taxon2^Get summary data and download by command line instructions for Coronaviridae genomes by taxon.:\x14virus_genome_summaryB\x05VirusJ\taccessionJ\x0ctable_fieldsJ\x06\x66ormatJ\x07use_psg\x12\xf0\x02\n\x1eGetSars2ProteinDownloadSummary\x12,.ncbi.datasets.v2.Sars2ProteinDatasetRequest\x1a!.ncbi.datasets.v2.DownloadSummary\"\xfc\x01\xc2\xf0\x19\xf7\x01\n\xf4\x01\x08\x01\x12-/v2alpha/virus/taxon/sars2/protein/{proteins}*>Summary of SARS-CoV-2 protein and CDS datasets by protein name2;Download a summary of available SARS-CoV-2 protein datasets:\x15sars2_protein_summaryB\x05VirusJ\x10\x65xclude_sequenceJ\x0ctable_fieldsJ\x06\x66ormat\x12\xfe\x02\n\x1dGetVirusGenomeMetadataAsTable\x12%.ncbi.datasets.v2.VirusDatasetRequest\x1a\x1f.ncbi.datasets.v2.TabularOutput\"\x92\x02\xc2\xf0\x19\x8d\x02\n\x8a\x02\x08\x01\x12)/v2alpha/virus/taxon/{taxon}/genome/table*/Get viral genomic metadata in a tabular format.2PGet viral genomic metadata in tabular format for Coronaviridae genomes by taxon.:\x12virus_genome_tableB\x05VirusJ\x10\x65xclude_sequenceJ\x17include_annotation_typeJ\taccessionJ\x07use_psg0\x01\x12\xf0\x02\n\x1eGetSars2ProteinMetadataAsTable\x12,.ncbi.datasets.v2.Sars2ProteinDatasetRequest\x1a\x1f.ncbi.datasets.v2.TabularOutput\"\xfc\x01\xc2\xf0\x19\xf7\x01\n\xf4\x01\x08\x01\x12\x33/v2alpha/virus/taxon/sars2/protein/{proteins}/table*4Get SARS-CoV-2 protein metadata in a tabular format.2>Get protein metadata in tabular format for SARS-CoV-2 genomes.:\x13sars2_protein_tableB\x05VirusJ\x10\x65xclude_sequenceJ\x17include_annotation_type0\x01\x12\xce\t\n\x13GetVirusDataReports\x12(.ncbi.datasets.v2.VirusDataReportRequest\x1a-.ncbi.datasets.v2.reports.VirusDataReportPage\"\xdd\x08\xc2\xf0\x19\xd8\x08\n\x88\x03\x08\x01\x12\x32/v2alpha/virus/taxon/{filter.taxon}/dataset_report*\x1bGet virus metadata by taxon2\x94\x01Get virus metadata by taxon. By default, in paged JSON format, but also available as tabular (accept: x-tabular) or json-lines (accept: x-jsonlines):\x16virus_reports_by_taxonB\x05VirusJ\x11\x66ilter.accessionsJ\x0ctable_formatR\x15\n\x0c\x66ilter.taxon\x12\x05taxonZ\x16v2reportsVirusAssemblyh\x01r\x10\x61pplication/jsonr\x19text/tab-separated-values\n\xa1\x03\x08\x01\x12;/v2alpha/virus/accession/{filter.accessions}/dataset_report*\x1fGet virus metadata by accession2\x97\x01Get virus metadata by accesion. By default, in paged JSON format, but also available as tabular (accept: x-tabular) or json-lines (accept: x-jsonlines):\x1avirus_reports_by_acessionsB\x05VirusJ\x0c\x66ilter.taxonJ\x0ctable_formatR\x1f\n\x11\x66ilter.accessions\x12\naccessionsZ\x16v2reportsVirusAssemblyh\x01r\x10\x61pplication/jsonr\x19text/tab-separated-values\n\xa6\x02\x08\x02\x12\x0e/v2alpha/virus*\x1aGet virus metadata by POST2\x8b\x01Get virus metadata. By default, in paged JSON format, but also available as tabular (accept: x-tabular) or json-lines (accept: x-jsonlines):\x15virus_reports_by_postB\x05VirusZ\x1bv2alphareportsVirusAssemblyh\x01r\x10\x61pplication/jsonr\x19text/tab-separated-values\x12\xe2\n\n\x19GetVirusAnnotationReports\x12..ncbi.datasets.v2.VirusAnnotationReportRequest\x1a\x33.ncbi.datasets.v2.reports.VirusAnnotationReportPage\"\xdf\t\xc2\xf0\x19\xda\t\n\xb0\x03\x08\x01\x12\x35/v2alpha/virus/taxon/{filter.taxon}/annotation_report*$Get virus annotation report by taxon2\x9d\x01Get virus annotation report by taxon. By default, in paged JSON format, but also available as tabular (accept: x-tabular) or json-lines (accept: x-jsonlines):!virus_annotation_reports_by_taxonB\x05VirusJ\x11\x66ilter.accessionsJ\x0ctable_formatR\x15\n\x0c\x66ilter.taxon\x12\x05taxonZ\x1ev2reportsVirusAnnotationReporth\x01r\x10\x61pplication/jsonr\x19text/tab-separated-values\n\xc9\x03\x08\x01\x12>/v2alpha/virus/accession/{filter.accessions}/annotation_report*(Get virus annotation report by accession2\xa0\x01Get virus annotation report by accesion. By default, in paged JSON format, but also available as tabular (accept: x-tabular) or json-lines (accept: x-jsonlines):%virus_annotation_reports_by_acessionsB\x05VirusJ\x0c\x66ilter.taxonJ\x0ctable_formatR\x1f\n\x11\x66ilter.accessions\x12\naccessionsZ\x1ev2reportsVirusAnnotationReporth\x01r\x10\x61pplication/jsonr\x19text/tab-separated-values\n\xd8\x02\x08\x02\x12 /v2alpha/virus/annotation_report*#Get virus annotation report by POST2\x94\x01Get virus annotation report. By default, in paged JSON format, but also available as tabular (accept: x-tabular) or json-lines (accept: x-jsonlines): virus_annotation_reports_by_postB\x05VirusZ\x1ev2reportsVirusAnnotationReporth\x01r\x10\x61pplication/jsonr\x19text/tab-separated-values\x12\xaf\x03\n\x16\x43heckVirusAvailability\x12*.ncbi.datasets.v2.VirusAvailabilityRequest\x1a#.ncbi.datasets.v2.VirusAvailability\"\xc3\x02\xc2\xf0\x19\xbe\x02\n\xa5\x01\x08\x01\x12+/v2alpha/virus/accession/{accessions}/check*$Check available viruses by accession2\x17\x43heck available viruses:\x1cvirus_accession_availabilityB\x05Virusr\x10\x61pplication/json\n\x93\x01\x08\x02\x12\x14/v2alpha/virus/check*$Check available viruses by accession2\x17\x43heck available viruses:!virus_accession_availability_postB\x05Virusr\x10\x61pplication/json2\x97\x01\n\x0cHttpDatafile\x12\x86\x01\n\x05\x46\x65tch\x12&.ncbi.datasets.v2.MethodPayloadRequest\x1a\x1b.google.protobuf.BytesValue\"6\xc2\xf0\x19\x32\n0\x08\x01\"\x1b/fetch_h/{method}/{payload}r\x0f\x61pplication/zip0\x01\x32\x88\x10\n\x0fTaxonomyDataset\x12\x99\x06\n\x16GetTaxonomyMetadataFor\x12).ncbi.datasets.v2.TaxonomyMetadataRequest\x1a*.ncbi.datasets.v2.TaxonomyMetadataResponse\"\xa7\x05\xc2\xf0\x19\xa2\x05\n\xcf\x02\x08\x01\x12 /v2alpha/taxonomy/taxon/{taxons}*3Use taxonomic identifiers to get taxonomic metadata2\xd6\x01Using NCBI Taxonomy IDs or names (common or scientific) at any rank, get metadata about a taxonomic node including taxonomic identifiers, lineage information, child nodes, and gene and genome counts in JSON format.:\x11taxonomy_metadataB\x08Taxonomy\n\xcd\x02\x08\x02\x12\x11/v2alpha/taxonomy*;Use taxonomic identifiers to get taxonomic metadata by post2\xd6\x01Using NCBI Taxonomy IDs or names (common or scientific) at any rank, get metadata about a taxonomic node including taxonomic identifiers, lineage information, child nodes, and gene and genome counts in JSON format.:\x16taxonomy_metadata_postB\x08Taxonomy\x12\xf4\x06\n\x19GetMinimumFilteredSubtree\x12\x30.ncbi.datasets.v2.TaxonomyFilteredSubtreeRequest\x1a\x31.ncbi.datasets.v2.TaxonomyFilteredSubtreeResponse\"\xf1\x05\xc2\xf0\x19\xec\x05\n\xf4\x02\x08\x01\x12\x31/v2alpha/taxonomy/taxon/{taxons}/filtered_subtree*=Use taxonomic identifiers to get a filtered taxonomic subtree2\xd8\x01Using NCBI Taxonomy IDs or names (common or scientific) at any rank, get a filtered taxonomic subtree that includes the full parent lineage and all immediate children from the selected taxonomic ranks in JSON format.:\x19taxonomy_filtered_subtreeB\x08Taxonomy\n\xf2\x02\x08\x02\x12\"/v2alpha/taxonomy/filtered_subtree*EUse taxonomic identifiers to get a filtered taxonomic subtree by post2\xd8\x01Using NCBI Taxonomy IDs or names (common or scientific) at any rank, get a filtered taxonomic subtree that includes the full parent lineage and all immediate children from the selected taxonomic ranks in JSON format.:\x1etaxonomy_filtered_subtree_postB\x08Taxonomy\x12\xe1\x02\n\x15GetOrganismsThatMatch\x12&.ncbi.datasets.v2.OrganismQueryRequest\x1a\x1f.ncbi.datasets.v2.SciNameAndIds\"\xfe\x01\xc2\xf0\x19\xf9\x01\n\xf6\x01\x08\x01\x12-/v2alpha/taxonomy/taxon_suggest/{taxon_query}*CGet a list of taxonomy names and IDs given a partial taxonomic name2dThis endpoint retrieves a list of taxonomy names and IDs given a partial taxonomic name of any rank.:\x0etax_name_queryB\x08Taxonomy2\x99\x15\n\x17GenomeAnnotationDataset\x12\xfc\x07\n\x14GetGenomeAnnotations\x12).ncbi.datasets.v2.GenomeAnnotationRequest\x1a\x34.ncbi.datasets.v2.reports.GenomeAnnotationReportPage\"\x82\x07\xc2\xf0\x19\xfd\x06\n\xd8\x03\x08\x01\x1a./v2alpha/genome/accession/{accession}/features\"7/v2alpha/genome/accession/{accession}/annotation_report*1Get genome annotation reports by genome accession2\xab\x01Get genome annotation reports by genome accession.  By default, in paged JSON format, but also available as tabular (accept: x-tabular) or json-lines (accept: x-jsonlines):\x18genome_annotation_reportB\x06GenomeJ\x04sortJ\x17include_annotation_typeZ\x1av2reportsFeatureDescriptorh\x01r\x10\x61pplication/jsonr\x19text/tab-separated-values\n\x9f\x03\x08\x02\x1a\"/v2alpha/genome/accession/features\"!/v2alpha/genome/annotation_report*1Get genome annotation reports by genome accession2\xab\x01Get genome annotation reports by genome accession.  By default, in paged JSON format, but also available as tabular (accept: x-tabular) or json-lines (accept: x-jsonlines): genome_annotation_report_by_postB\x06GenomeZ\x1av2reportsFeatureDescriptorh\x01r\x10\x61pplication/jsonr\x19text/tab-separated-values\x12\xb5\x07\n\x1aGetGenomeAnnotationSummary\x12).ncbi.datasets.v2.GenomeAnnotationRequest\x1a\x33.ncbi.datasets.v2.GenomeAnnotationTableSummaryReply\"\xb6\x06\xc2\xf0\x19\xb1\x06\n\x82\x04\x08\x01\x1a\x35/v2alpha/genome/accession/{accession}/feature_summary\"L/v2alpha/genome/accession/{accession}/id/{annotation_ids}/annotation_summary*0Get genome annotation report summary information2zGet genome annotation report summary information by genome accession. The return facets can be used in subsequent queries.:\x18\x61nnotation_report_facetsB\x06GenomeJ\x07symbolsJ\x0b\x63hromosomesJ\tlocationsJ\ngene_typesJ\x0bsearch_textJ\x05queryJ\x04sortJ\tpage_sizeJ\npage_tokenJ\x0ctable_fieldsJ\x0ctable_formatJ\x16include_tabular_headerJ\x17include_annotation_type\n\xa9\x02\x08\x02\x1a)/v2alpha/genome/accession/feature_summary\"\"/v2alpha/genome/annotation_summary*0Get genome annotation report summary information2zGet genome annotation report summary information by genome accession. The return facets can be used in subsequent queries.: annotation_report_facets_by_postB\x06Genome\x12\xc6\x05\n\x12GetDownloadSummary\x12).ncbi.datasets.v2.GenomeAnnotationRequest\x1a!.ncbi.datasets.v2.DownloadSummary\"\xe1\x04\xc2\xf0\x19\xdc\x04\n\xfd\x01\x08\x01\"H/v2alpha/genome/accession/{accession}/annotation_report/download_summary* Preview feature dataset download2DGet a download feature summary by accession in a JSON output format.:\"genome_annotation_download_summaryB\x06GenomeJ\tpage_sizeJ\npage_tokenJ\x04sort\n\xd9\x02\x08\x02\"2/v2alpha/genome/annotation_report/download_summary* Preview feature download by POST2\xca\x01The \'GET\' version of feature download summary is limited by the size of the GET URL (2KB).  The POST operation is provided to allow users to supply a larger number of annotation_ids in a single request.:*genome_annotation_download_summary_by_postB\x06Genome2\xb5\r\n\x12TaxonomyCppDataset\x12\xa3\x06\n\x16GetTaxonomyMetadataFor\x12).ncbi.datasets.v2.TaxonomyMetadataRequest\x1a*.ncbi.datasets.v2.TaxonomyMetadataResponse\"\xb1\x05\xc2\xf0\x19\xac\x05\n\xd1\x02\x08\x01\"!/v2alpha/taxonomy/taxon2/{taxons}*3Use taxonomic identifiers to get taxonomic metadata2\xd6\x01Using NCBI Taxonomy IDs or names (common or scientific) at any rank, get metadata about a taxonomic node including taxonomic identifiers, lineage information, child nodes, and gene and genome counts in JSON format.:\x12taxonomy_metadata2B\x08Taxonomy\n\xd5\x02\x08\x02\"\x18/v2alpha/taxonomy/taxon2*;Use taxonomic identifiers to get taxonomic metadata by post2\xd6\x01Using NCBI Taxonomy IDs or names (common or scientific) at any rank, get metadata about a taxonomic node including taxonomic identifiers, lineage information, child nodes, and gene and genome counts in JSON format.:\x17taxonomy_metadata_post2B\x08Taxonomy\x12\xf8\x06\n\x19GetMinimumFilteredSubtree\x12\x30.ncbi.datasets.v2.TaxonomyFilteredSubtreeRequest\x1a\x31.ncbi.datasets.v2.TaxonomyFilteredSubtreeResponse\"\xf5\x05\xc2\xf0\x19\xf0\x05\n\xf6\x02\x08\x01\x12\x32/v2alpha/taxonomy/taxon/{taxons}/filtered_subtree2*=Use taxonomic identifiers to get a filtered taxonomic subtree2\xd8\x01Using NCBI Taxonomy IDs or names (common or scientific) at any rank, get a filtered taxonomic subtree that includes the full parent lineage and all immediate children from the selected taxonomic ranks in JSON format.:\x1ataxonomy_filtered_subtree2B\x08Taxonomy\n\xf4\x02\x08\x02\x12#/v2alpha/taxonomy/filtered_subtree2*EUse taxonomic identifiers to get a filtered taxonomic subtree by post2\xd8\x01Using NCBI Taxonomy IDs or names (common or scientific) at any rank, get a filtered taxonomic subtree that includes the full parent lineage and all immediate children from the selected taxonomic ranks in JSON format.:\x1ftaxonomy_filtered_subtree_post2B\x08Taxonomy2\xd9\x01\n\x07Gateway\x12\xcd\x01\n\x07Version\x12\x16.google.protobuf.Empty\x1a\x1e.ncbi.datasets.v2.VersionReply\"\x89\x01\xc2\xf0\x19\x84\x01\n\x81\x01\x08\x01\x12\x08/version\x1a\x10/v2alpha/version*\x18Retrieve service version25Retrieve the latest version of the Datasets services.:\x07versionB\x07VersionB\"Z\x10ncbi/datasets/v2\xf8\x01\x01\xc2\xf0\x19\t\n\x07v2alphab\x06proto3'
  ,
  dependencies=[google_dot_protobuf_dot_wrappers__pb2.DESCRIPTOR,google_dot_protobuf_dot_empty__pb2.DESCRIPTOR,ncbi_dot_datasets_dot_v2_dot_datasets__pb2.DESCRIPTOR,ncbi_dot_datasets_dot_v2_dot_reports_dot_assembly__pb2.DESCRIPTOR,ncbi_dot_datasets_dot_v2_dot_reports_dot_feature__pb2.DESCRIPTOR,ncbi_dot_datasets_dot_v2_dot_reports_dot_gene__pb2.DESCRIPTOR,ncbi_dot_datasets_dot_v2_dot_reports_dot_virus__pb2.DESCRIPTOR,ncbi_dot_datasets_dot_v2_dot_reports_dot_virus__annotation__pb2.DESCRIPTOR,ncbi_dot_datasets_dot_options_dot_openapi__pb2.DESCRIPTOR,])



_sym_db.RegisterFileDescriptor(DESCRIPTOR)


DESCRIPTOR._options = None

_ASSEMBLYDATASET = _descriptor.ServiceDescriptor(
  name='AssemblyDataset',
  full_name='ncbi.datasets.v2.AssemblyDataset',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=398,
  serialized_end=5196,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetDownloadSummary',
    full_name='ncbi.datasets.v2.AssemblyDataset.GetDownloadSummary',
    index=0,
    containing_service=None,
    input_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._ASSEMBLYDATASETREQUEST,
    output_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._DOWNLOADSUMMARY,
    serialized_options=b'\302\360\031\300\004\n\322\001\010\001\0227/v2alpha/genome/accession/{accessions}/download_summary*\037Preview genome dataset download2<Get a download summary by accession in a JSON output format.:\027genome_download_summaryB\006GenomeJ\010hydratedJ\013include_tsv\n\350\002\010\002\022 /v2alpha/genome/download_summary*\'Preview genome dataset download by POST2\357\001The \'GET\' version of download summary is limited by the size of the GET URL (2KB, which works out to about 140 genomic accessions).  The POST operation is provided to allow users to supply a larger number of accessions in a single request.:\037genome_download_summary_by_postB\006Genome',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetAssemblyDataReports',
    full_name='ncbi.datasets.v2.AssemblyDataset.GetAssemblyDataReports',
    index=1,
    containing_service=None,
    input_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._ASSEMBLYDATASETREPORTSREQUEST,
    output_type=ncbi_dot_datasets_dot_v2_dot_reports_dot_assembly__pb2._ASSEMBLYDATAREPORTPAGE,
    serialized_options=b'\302\360\031\213\r\n\245\003\010\001\0225/v2alpha/genome/accession/{accessions}/dataset_report*!Get dataset reports by accessions2\233\001Get dataset reports by accessions.  By default, in paged JSON format, but also available as tabular (accept: x-tabular) or json-lines (accept: x-jsonlines):\025genome_dataset_reportB\006GenomeJ\010hydratedJ\013include_tsvJ\014table_formatJ\006taxonsJ\013bioprojectsJ\004sortZ\033v2reportsAssemblyDataReporth\001r\020application/jsonr\031text/tab-separated-values\n\241\003\010\001\022-/v2alpha/genome/taxon/{taxons}/dataset_report*\035Get dataset reports by taxons2\227\001Get dataset reports by taxons.  By default, in paged JSON format, but also available as tabular (accept: x-tabular) or json-lines (accept: x-jsonlines):\037genome_dataset_reports_by_taxonB\006GenomeJ\010hydratedJ\013include_tsvJ\014table_formatJ\naccessionsJ\017bioprojectssortZ\033v2reportsAssemblyDataReporth\001r\020application/jsonr\031text/tab-separated-values\n\266\003\010\001\0227/v2alpha/genome/bioproject/{bioprojects}/dataset_report*!Get dataset reports by bioproject2\234\001Get dataset reports by bioprojects.  By default, in paged JSON format, but also available as tabular (accept: x-tabular) or json-lines (accept: x-jsonlines):$genome_dataset_reports_by_bioprojectB\006GenomeJ\010hydratedJ\013include_tsvJ\014table_formatJ\006taxonsJ\naccessionsJ\004sortZ\033v2reportsAssemblyDataReporth\001r\020application/jsonr\031text/tab-separated-values\n\203\003\010\002\022\036/v2alpha/genome/dataset_report*!Get dataset reports by accessions2\233\001Get a dataset report by accession.  By default, in paged JSON format, but also available as tabular (accept: x-tabular) or json-lines (accept: x-jsonlines):\035genome_dataset_report_by_postB\006GenomeJ\010hydratedJ\013include_tsvJ\014table_formatJ\006taxonsZ\033v2reportsAssemblyDataReporth\001r\020application/jsonr\031text/tab-separated-values',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetAssemblyRevisionHistory',
    full_name='ncbi.datasets.v2.AssemblyDataset.GetAssemblyRevisionHistory',
    index=2,
    containing_service=None,
    input_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._ASSEMBLYREVISIONHISTORYREQUEST,
    output_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._ASSEMBLYREVISIONHISTORY,
    serialized_options=b'\302\360\031\307\001\n\304\001\010\001\0226/v2alpha/genome/accession/{accession}/revision_history*.Get revision history for assembly by accession2.Get revision history for assembly by accession: assembly_revision_history_by_getB\006Genome',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetSequenceReports',
    full_name='ncbi.datasets.v2.AssemblyDataset.GetSequenceReports',
    index=3,
    containing_service=None,
    input_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._ASSEMBLYSEQUENCEREPORTSREQUEST,
    output_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._SEQUENCEREPORTPAGE,
    serialized_options=b'\302\360\031\227\007\n\343\003\010\001\0226/v2alpha/genome/accession/{accession}/sequence_reports*\"Get sequence reports by accessions2\265\001Get a sequence report by accession.  By default, in paged JSON format, but also available as tabular (accept: text/tab-separated-values) or json-lines (accept: application/x-ndjson):\026genome_sequence_reportB\006GenomeJ\014table_formatZ\025v2reportsSequenceInfoh\001r\020application/jsonrAapplication/vnd.openxmlformats-officedocument.spreadsheetml.sheetr\031text/tab-separated-valuesr\024application/x-ndjson\n\256\003\010\002\022 /v2alpha/genome/sequence_reports*\"Get sequence reports by accessions2\234\001Get a sequence report by accession.  By default, in paged JSON format, but also available as tabular (accept: x-tabular) or json-lines (accept: x-jsonlines):\036genome_sequence_report_by_postB\006GenomeZ\025v2reportsSequenceInfoh\001r\020application/jsonrAapplication/vnd.openxmlformats-officedocument.spreadsheetml.sheetr\031text/tab-separated-valuesr\024application/x-ndjson',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetAssemblyLinks',
    full_name='ncbi.datasets.v2.AssemblyDataset.GetAssemblyLinks',
    index=4,
    containing_service=None,
    input_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._ASSEMBLYLINKSREQUEST,
    output_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._ASSEMBLYLINKSREPLY,
    serialized_options=b'\302\360\031\262\001\n\257\001\010\001\022,/v2alpha/genome/accession/{accessions}/links* Get assembly links by accessions28Get links to available assembly resources by accessions.:\031genome_links_by_accessionB\006Genome',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetCheckMHistogram',
    full_name='ncbi.datasets.v2.AssemblyDataset.GetCheckMHistogram',
    index=5,
    containing_service=None,
    input_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._ASSEMBLYCHECKMHISTOGRAMREQUEST,
    output_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._ASSEMBLYCHECKMHISTOGRAMREPLY,
    serialized_options=b'\302\360\031\363\001\n\360\001\010\001\0226/v2alpha/genome/taxon/{species_taxon}/checkm_histogram*%Get CheckM histogram by species taxon2jGet CheckM histogram by species taxon. CheckM histograms are only available for certain bacterial species.:\031checkm_histogram_by_taxonB\006Genome',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='Sleep',
    full_name='ncbi.datasets.v2.AssemblyDataset.Sleep',
    index=6,
    containing_service=None,
    input_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._SLEEPREQUEST,
    output_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._SLEEPREPLY,
    serialized_options=b'\302\360\031.\n,\010\001\"(/v2alpha/sleep/{sleep_msec}/{error_rate}',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='SleepStream',
    full_name='ncbi.datasets.v2.AssemblyDataset.SleepStream',
    index=7,
    containing_service=None,
    input_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._SLEEPREQUEST,
    output_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._SLEEPREPLY,
    serialized_options=b'\302\360\0315\n3\010\001\"//v2alpha/sleep/stream/{sleep_msec}/{error_rate}',
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_ASSEMBLYDATASET)

DESCRIPTOR.services_by_name['AssemblyDataset'] = _ASSEMBLYDATASET


_VIRUSDOWNLOAD = _descriptor.ServiceDescriptor(
  name='VirusDownload',
  full_name='ncbi.datasets.v2.VirusDownload',
  file=DESCRIPTOR,
  index=1,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=5199,
  serialized_end=6890,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetVirusDatasetStream',
    full_name='ncbi.datasets.v2.VirusDownload.GetVirusDatasetStream',
    index=0,
    containing_service=None,
    input_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._VIRUSDATASETREQUEST,
    output_type=google_dot_protobuf_dot_wrappers__pb2._BYTESVALUE,
    serialized_options=b'\302\360\031\255\007\n\354\001\010\001\022,/v2alpha/virus/taxon/{taxon}/genome/download*.Download a coronavirus genome dataset by taxon2.Download a coronavirus genome dataset by taxon:\025virus_genome_downloadB\005VirusJ\taccessionJ\naccessionsJ\014table_fieldsJ\006formatr\017application/zip\n\224\002\010\001\0225/v2alpha/virus/accession/{accessions}/genome/download*2Download a coronavirus genome dataset by accession22Download a coronavirus genome dataset by accession:\037virus_genome_download_accessionB\005VirusJ\005taxonJ\006tax_idJ\010tax_nameJ\taccessionJ\014table_fieldsJ\006formatr\017application/zip\n\244\003\010\002\022\036/v2alpha/virus/genome/download*(Get a coronavirus genome dataset by post2\347\001The \'GET\' version of download is limited by the size of the GET URL (2KB, which works out to about 140 genomic accessions).  The POST operation is provided to allow users to supply a larger number of accessions in a single request.:\032virus_genome_download_postB\005VirusJ\005taxonJ\006tax_idJ\010tax_nameJ\taccessionJ\014table_fieldsJ\006formatr\017application/zip',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetSars2ProteinDatasetStream',
    full_name='ncbi.datasets.v2.VirusDownload.GetSars2ProteinDatasetStream',
    index=1,
    containing_service=None,
    input_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._SARS2PROTEINDATASETREQUEST,
    output_type=google_dot_protobuf_dot_wrappers__pb2._BYTESVALUE,
    serialized_options=b'\302\360\031\201\004\n\362\001\010\001\0226/v2alpha/virus/taxon/sars2/protein/{proteins}/download*<Download SARS-CoV-2 protein and CDS datasets by protein name2$Download SARS-CoV-2 protein datasets:\026sars2_protein_downloadB\005VirusJ\014table_fieldsJ\014table_formatJ\006formatr\017application/zip\n\211\002\010\002\022+/v2alpha/virus/taxon/sars2/protein/download*LDownload SARS-CoV-2 protein and CDS datasets by protein name by POST request21Download SARS-CoV-2 protein datasets POST request:\033sars2_protein_download_postB\005VirusJ\014table_fieldsJ\014table_formatJ\006formatr\017application/zip',
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_VIRUSDOWNLOAD)

DESCRIPTOR.services_by_name['VirusDownload'] = _VIRUSDOWNLOAD


_DATASETDOWNLOAD = _descriptor.ServiceDescriptor(
  name='DatasetDownload',
  full_name='ncbi.datasets.v2.DatasetDownload',
  file=DESCRIPTOR,
  index=2,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=6893,
  serialized_end=10996,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetAssemblyDatasetStream',
    full_name='ncbi.datasets.v2.DatasetDownload.GetAssemblyDatasetStream',
    index=0,
    containing_service=None,
    input_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._ASSEMBLYDATASETREQUEST,
    output_type=google_dot_protobuf_dot_wrappers__pb2._BYTESVALUE,
    serialized_options=b'\302\360\031\360\004\n\200\002\010\001\022//v2alpha/genome/accession/{accessions}/download*!Get a genome dataset by accession2gDownload a genome dataset including fasta sequence, annotation and a detailed data report by accession.:\031download_assembly_packageB\006GenomeJ\013include_tsvr\017application/zip\n\352\002\010\002\022\030/v2alpha/genome/download*\034Get a genome dataset by post2\347\001The \'GET\' version of download is limited by the size of the GET URL (2KB, which works out to about 140 genomic accessions).  The POST operation is provided to allow users to supply a larger number of accessions in a single request.:\036download_assembly_package_postB\006GenomeJ\013include_tsvr\017application/zip',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetGeneDatasetStream',
    full_name='ncbi.datasets.v2.DatasetDownload.GetGeneDatasetStream',
    index=1,
    containing_service=None,
    input_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._GENEDATASETREQUEST,
    output_type=google_dot_protobuf_dot_wrappers__pb2._BYTESVALUE,
    serialized_options=b'\302\360\031\311\004\n\356\002\010\001\022$/v2alpha/gene/id/{gene_ids}/download*\035Get a gene dataset by gene ID2mGet a gene dataset including gene, transcript and protein fasta sequence, annotation and metadata by gene ID.:\025download_gene_packageB\004GeneJ\027symbols_for_taxon.taxonJ\031symbols_for_taxon.symbolsJ\naccessionsJ\005taxonJ\005limitJ\020returned_contentJ\021sort_schema.fieldJ\025sort_schema.directionr\017application/zip\n\325\001\010\002\022\026/v2alpha/gene/download*\032Get a gene dataset by POST2jGet a gene dataset including gene, transcript and protein fasta sequence, annotation and metadata by POST.:\032download_gene_package_postB\004Gener\017application/zip',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetMicroBiggeDatasetStream',
    full_name='ncbi.datasets.v2.DatasetDownload.GetMicroBiggeDatasetStream',
    index=2,
    containing_service=None,
    input_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._MICROBIGGEDATASETREQUEST,
    output_type=google_dot_protobuf_dot_wrappers__pb2._BYTESVALUE,
    serialized_options=b'\302\360\031z\nE\010\001\"0/v2alpha/microbigge/{opaque_solr_query}/downloadr\017application/zip\n1\010\002\"\034/v2alpha/microbigge/downloadr\017application/zip',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetProkaryoteGeneDatasetStream',
    full_name='ncbi.datasets.v2.DatasetDownload.GetProkaryoteGeneDatasetStream',
    index=3,
    containing_service=None,
    input_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._PROKARYOTEGENEREQUEST,
    output_type=google_dot_protobuf_dot_wrappers__pb2._BYTESVALUE,
    serialized_options=b'\302\360\031\362\004\n\262\002\010\001\0220/v2alpha/protein/accession/{accessions}/download*9Get a prokaryote gene dataset by RefSeq protein accession2\201\001Get a prokaryote gene dataset including gene and protein fasta sequence, annotation and metadata by prokaryote protein accession.: download_prokaryote_gene_packageB\nProkaryoter\017application/zip\n\272\002\010\002\022#/v2alpha/protein/accession/download*AGet a prokaryote gene dataset by RefSeq protein accession by POST2\211\001Get a prokaryote gene dataset including gene and protein fasta sequence, annotation and metadata by prokaryote protein accession by POST.:%download_prokaryote_gene_package_postB\nProkaryoter\017application/zip',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetGenomeAnnotationDatasetStream',
    full_name='ncbi.datasets.v2.DatasetDownload.GetGenomeAnnotationDatasetStream',
    index=4,
    containing_service=None,
    input_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._GENOMEANNOTATIONREQUEST,
    output_type=google_dot_protobuf_dot_wrappers__pb2._BYTESVALUE,
    serialized_options=b'\302\360\031\220\005\n\327\002\010\001\0326/v2alpha/genome/accession/{accession}/feature/download\"@/v2alpha/genome/accession/{accession}/annotation_report/download*-Get an annotation report dataset by accession2mDownload an annotation report including fasta sequence and a detailed annotation report by genomic accession.:\"download_genome_annotation_packageB\006Genomer\017application/zip\n\263\002\010\002\032 /v2alpha/genome/feature/download\"*/v2alpha/genome/annotation_report/download*-Get an annotation report dataset by accession2mDownload an annotation report including fasta sequence and a detailed annotation report by genomic accession.:*download_genome_annotation_package_by_postB\006Genomer\017application/zip',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='CheckAssemblyAvailability',
    full_name='ncbi.datasets.v2.DatasetDownload.CheckAssemblyAvailability',
    index=5,
    containing_service=None,
    input_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._ASSEMBLYDATASETREQUEST,
    output_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._ASSEMBLYDATASETAVAILABILITY,
    serialized_options=b'\302\360\031\224\006\n\242\003\010\001\022,/v2alpha/genome/accession/{accessions}/check*\'Check the validity of genome accessions2\344\001The \'GET\' version of check is limited by the size of the GET URL (2KB, which works out to about 140 genomic accessions).  The POST operation is provided to allow users to supply a larger number of accessions in a single request.:\033check_assembly_availabilityB\006GenomeJ\013chromosomesJ\027include_annotation_typeJ\010hydratedJ\013include_tsv\n\354\002\010\002\022\025/v2alpha/genome/check*@Check the validity of many genome accessions in a single request2\344\001The \'GET\' version of check is limited by the size of the GET URL (2KB, which works out to about 140 genomic accessions).  The POST operation is provided to allow users to supply a larger number of accessions in a single request.: check_assembly_availability_postB\006Genome',
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_DATASETDOWNLOAD)

DESCRIPTOR.services_by_name['DatasetDownload'] = _DATASETDOWNLOAD


_GENEDATASET = _descriptor.ServiceDescriptor(
  name='GeneDataset',
  full_name='ncbi.datasets.v2.GeneDataset',
  file=DESCRIPTOR,
  index=3,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=10999,
  serialized_end=15222,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetGeneDataReportsPaged',
    full_name='ncbi.datasets.v2.GeneDataset.GetGeneDataReportsPaged',
    index=0,
    containing_service=None,
    input_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._GENEDATASETREPORTSREQUEST,
    output_type=ncbi_dot_datasets_dot_v2_dot_reports_dot_gene__pb2._GENEDATAREPORTPAGE,
    serialized_options=b'\302\360\031\225\021\n\253\003\010\001\022\033/v2alpha/gene/id/{gene_ids}*\032Get gene reports by GeneID2\225\001Get a gene summary by GeneID. By default, in paged JSON format, but also available as tabular (accept: x-tabular) or json-lines (accept: x-jsonlines):\022gene_reports_by_idB\004GeneJ\027symbols_for_taxon.taxonJ\031symbols_for_taxon.symbolsJ\021symbols_for_taxonJ\naccessionsJ\005taxonJ\005queryJ\005typesJ\014table_formatZ\027v2reportsGeneDataReporth\001r\020application/jsonr\031text/tab-separated-values\n\317\003\010\001\022$/v2alpha/gene/accession/{accessions}*%Get gene metadata by RefSeq Accession2\237\001Get a gene summary by RefSeq Accession. By default, in paged JSON format, but also available as tabular (accept: x-tabular) or json-lines (accept: x-jsonlines):\032gene_metadata_by_accessionB\004GeneJ\027symbols_for_taxon.taxonJ\031symbols_for_taxon.symbolsJ\021symbols_for_taxonJ\010gene_idsJ\005taxonJ\005queryJ\005typesJ\014table_formatZ\027v2reportsGeneDataReporth\001r\020application/jsonr\031text/tab-separated-values\n\206\004\010\001\022P/v2alpha/gene/symbol/{symbols_for_taxon.symbols}/taxon/{symbols_for_taxon.taxon}* Get gene metadata by gene symbol2\235\001Get a gene summary by by gene symbol. By default, in paged JSON format, but also available as tabular (accept: x-tabular) or json-lines (accept: x-jsonlines):\037gene_metadata_by_tax_and_symbolB\004GeneJ\naccessionsJ\010gene_idsJ\005taxonJ\005queryJ\005typesJ\014table_formatR$\n\031symbols_for_taxon.symbols\022\007symbolsR \n\027symbols_for_taxon.taxon\022\005taxonZ\027v2reportsGeneDataReporth\001r\020application/jsonr\031text/tab-separated-values\n\347\003\010\001\022\033/v2alpha/gene/taxon/{taxon}*(Get gene reports by taxonomic identifier2\313\001Get a gene summary for a specified NCBI Taxonomy ID or name (common or scientific). By default, in paged JSON format, but also available as tabular (accept: x-tabular) or json-lines (accept: x-jsonlines):\025gene_reports_by_taxonB\004GeneJ\027symbols_for_taxon.taxonJ\031symbols_for_taxon.symbolsJ\021symbols_for_taxonJ\naccessionsJ\010gene_idsJ\014table_formatZ\027v2reportsGeneDataReporth\001r\020application/jsonr\031text/tab-separated-values\n\237\002\010\002\022\r/v2alpha/gene*\031Get gene metadata as JSON2\213\001Get a gene summary. By default, in paged JSON format, but also available as tabular (accept: x-tabular) or json-lines (accept: x-jsonlines):\025gene_metadata_by_postB\004GeneZ\027v2reportsGeneDataReporth\001r\020application/jsonr\031text/tab-separated-values',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetDownloadSummary',
    full_name='ncbi.datasets.v2.GeneDataset.GetDownloadSummary',
    index=1,
    containing_service=None,
    input_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._GENEDATASETREQUEST,
    output_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._DOWNLOADSUMMARY,
    serialized_options=b'\302\360\031\317\002\n\263\001\010\001\022,/v2alpha/gene/id/{gene_ids}/download_summary*#Get gene download summary by GeneID29Get a download summary by GeneID in a JSON output format.:\033gene_download_summary_by_idB\004Gene\n\226\001\010\002\022\036/v2alpha/gene/download_summary*\031Get gene download summary22Get gene download summary in a JSON output format.:\035gene_download_summary_by_postB\004Gene',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetGeneCountsByTaxon',
    full_name='ncbi.datasets.v2.GeneDataset.GetGeneCountsByTaxon',
    index=2,
    containing_service=None,
    input_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._GENECOUNTSBYTAXONREQUEST,
    output_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._GENECOUNTSBYTAXONREPLY,
    serialized_options=b'\302\360\031\240\003\n\315\001\010\001\022\"/v2alpha/gene/taxon/{taxon}/counts*\'Get gene counts by taxonomic identifier2_Get gene counts for a specified NCBI Taxonomy ID or name (common or scientific) in JSON format.:\025gene_counts_for_taxonB\004Gene\n\315\001\010\002\022\032/v2alpha/gene/taxon/counts*\'Get gene counts by taxonomic identifier2_Get gene counts for a specified NCBI Taxonomy ID or name (common or scientific) in JSON format.:\035gene_counts_for_taxon_by_postB\004Gene',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetOrthologSet',
    full_name='ncbi.datasets.v2.GeneDataset.GetOrthologSet',
    index=3,
    containing_service=None,
    input_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._ORTHOLOGREQUEST,
    output_type=ncbi_dot_datasets_dot_v2_dot_reports_dot_gene__pb2._GENEDATAREPORTPAGE,
    serialized_options=b'\302\360\031\262\001\n\257\001\010\001\022$/v2alpha/gene/id/{gene_id}/orthologs*\035Get gene orthologs by gene ID2JGet a gene summary for an ortholog set by gene ID in a JSON output format.:\024gene_orthologs_by_idB\004Gene',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetGeneLinks',
    full_name='ncbi.datasets.v2.GeneDataset.GetGeneLinks',
    index=4,
    containing_service=None,
    input_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._GENELINKSREQUEST,
    output_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._GENELINKSREPLY,
    serialized_options=b'\302\360\031\216\001\n\213\001\010\001\022!/v2alpha/gene/id/{gene_ids}/links*\031Get gene links by gene ID21Get links to available gene resources by gene ID.:\020gene_links_by_idB\004Gene',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetChromsomeSummaryForTaxonAndAnnotation',
    full_name='ncbi.datasets.v2.GeneDataset.GetChromsomeSummaryForTaxonAndAnnotation',
    index=5,
    containing_service=None,
    input_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._GENECHROMOSOMESUMMARYREQUEST,
    output_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._GENECHROMOSOMESUMMARYREPLY,
    serialized_options=b'\302\360\031\362\001\n\357\001\010\001\022K/v2alpha/gene/taxon/{taxon}/annotation/{annotation_name}/chromosome_summary*>Get summary of chromosomes for a particular taxon\'s annotation2?Get summary of chromosomes for a particular taxon\'s annotation.:\027gene_chromosome_summaryB\004Gene',
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_GENEDATASET)

DESCRIPTOR.services_by_name['GeneDataset'] = _GENEDATASET


_VIRUSDATASET = _descriptor.ServiceDescriptor(
  name='VirusDataset',
  full_name='ncbi.datasets.v2.VirusDataset',
  file=DESCRIPTOR,
  index=4,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=15225,
  serialized_end=19781,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetDownloadSummary',
    full_name='ncbi.datasets.v2.VirusDataset.GetDownloadSummary',
    index=0,
    containing_service=None,
    input_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._VIRUSDATASETREQUEST,
    output_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._DOWNLOADSUMMARY,
    serialized_options=b'\302\360\031\206\002\n\203\002\010\001\022#/v2alpha/virus/taxon/{taxon}/genome*3Get summary data for Coronaviridae genomes by taxon2^Get summary data and download by command line instructions for Coronaviridae genomes by taxon.:\024virus_genome_summaryB\005VirusJ\taccessionJ\014table_fieldsJ\006formatJ\007use_psg',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetSars2ProteinDownloadSummary',
    full_name='ncbi.datasets.v2.VirusDataset.GetSars2ProteinDownloadSummary',
    index=1,
    containing_service=None,
    input_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._SARS2PROTEINDATASETREQUEST,
    output_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._DOWNLOADSUMMARY,
    serialized_options=b'\302\360\031\367\001\n\364\001\010\001\022-/v2alpha/virus/taxon/sars2/protein/{proteins}*>Summary of SARS-CoV-2 protein and CDS datasets by protein name2;Download a summary of available SARS-CoV-2 protein datasets:\025sars2_protein_summaryB\005VirusJ\020exclude_sequenceJ\014table_fieldsJ\006format',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetVirusGenomeMetadataAsTable',
    full_name='ncbi.datasets.v2.VirusDataset.GetVirusGenomeMetadataAsTable',
    index=2,
    containing_service=None,
    input_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._VIRUSDATASETREQUEST,
    output_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._TABULAROUTPUT,
    serialized_options=b'\302\360\031\215\002\n\212\002\010\001\022)/v2alpha/virus/taxon/{taxon}/genome/table*/Get viral genomic metadata in a tabular format.2PGet viral genomic metadata in tabular format for Coronaviridae genomes by taxon.:\022virus_genome_tableB\005VirusJ\020exclude_sequenceJ\027include_annotation_typeJ\taccessionJ\007use_psg',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetSars2ProteinMetadataAsTable',
    full_name='ncbi.datasets.v2.VirusDataset.GetSars2ProteinMetadataAsTable',
    index=3,
    containing_service=None,
    input_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._SARS2PROTEINDATASETREQUEST,
    output_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._TABULAROUTPUT,
    serialized_options=b'\302\360\031\367\001\n\364\001\010\001\0223/v2alpha/virus/taxon/sars2/protein/{proteins}/table*4Get SARS-CoV-2 protein metadata in a tabular format.2>Get protein metadata in tabular format for SARS-CoV-2 genomes.:\023sars2_protein_tableB\005VirusJ\020exclude_sequenceJ\027include_annotation_type',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetVirusDataReports',
    full_name='ncbi.datasets.v2.VirusDataset.GetVirusDataReports',
    index=4,
    containing_service=None,
    input_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._VIRUSDATAREPORTREQUEST,
    output_type=ncbi_dot_datasets_dot_v2_dot_reports_dot_virus__pb2._VIRUSDATAREPORTPAGE,
    serialized_options=b'\302\360\031\330\010\n\210\003\010\001\0222/v2alpha/virus/taxon/{filter.taxon}/dataset_report*\033Get virus metadata by taxon2\224\001Get virus metadata by taxon. By default, in paged JSON format, but also available as tabular (accept: x-tabular) or json-lines (accept: x-jsonlines):\026virus_reports_by_taxonB\005VirusJ\021filter.accessionsJ\014table_formatR\025\n\014filter.taxon\022\005taxonZ\026v2reportsVirusAssemblyh\001r\020application/jsonr\031text/tab-separated-values\n\241\003\010\001\022;/v2alpha/virus/accession/{filter.accessions}/dataset_report*\037Get virus metadata by accession2\227\001Get virus metadata by accesion. By default, in paged JSON format, but also available as tabular (accept: x-tabular) or json-lines (accept: x-jsonlines):\032virus_reports_by_acessionsB\005VirusJ\014filter.taxonJ\014table_formatR\037\n\021filter.accessions\022\naccessionsZ\026v2reportsVirusAssemblyh\001r\020application/jsonr\031text/tab-separated-values\n\246\002\010\002\022\016/v2alpha/virus*\032Get virus metadata by POST2\213\001Get virus metadata. By default, in paged JSON format, but also available as tabular (accept: x-tabular) or json-lines (accept: x-jsonlines):\025virus_reports_by_postB\005VirusZ\033v2alphareportsVirusAssemblyh\001r\020application/jsonr\031text/tab-separated-values',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetVirusAnnotationReports',
    full_name='ncbi.datasets.v2.VirusDataset.GetVirusAnnotationReports',
    index=5,
    containing_service=None,
    input_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._VIRUSANNOTATIONREPORTREQUEST,
    output_type=ncbi_dot_datasets_dot_v2_dot_reports_dot_virus__annotation__pb2._VIRUSANNOTATIONREPORTPAGE,
    serialized_options=b'\302\360\031\332\t\n\260\003\010\001\0225/v2alpha/virus/taxon/{filter.taxon}/annotation_report*$Get virus annotation report by taxon2\235\001Get virus annotation report by taxon. By default, in paged JSON format, but also available as tabular (accept: x-tabular) or json-lines (accept: x-jsonlines):!virus_annotation_reports_by_taxonB\005VirusJ\021filter.accessionsJ\014table_formatR\025\n\014filter.taxon\022\005taxonZ\036v2reportsVirusAnnotationReporth\001r\020application/jsonr\031text/tab-separated-values\n\311\003\010\001\022>/v2alpha/virus/accession/{filter.accessions}/annotation_report*(Get virus annotation report by accession2\240\001Get virus annotation report by accesion. By default, in paged JSON format, but also available as tabular (accept: x-tabular) or json-lines (accept: x-jsonlines):%virus_annotation_reports_by_acessionsB\005VirusJ\014filter.taxonJ\014table_formatR\037\n\021filter.accessions\022\naccessionsZ\036v2reportsVirusAnnotationReporth\001r\020application/jsonr\031text/tab-separated-values\n\330\002\010\002\022 /v2alpha/virus/annotation_report*#Get virus annotation report by POST2\224\001Get virus annotation report. By default, in paged JSON format, but also available as tabular (accept: x-tabular) or json-lines (accept: x-jsonlines): virus_annotation_reports_by_postB\005VirusZ\036v2reportsVirusAnnotationReporth\001r\020application/jsonr\031text/tab-separated-values',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='CheckVirusAvailability',
    full_name='ncbi.datasets.v2.VirusDataset.CheckVirusAvailability',
    index=6,
    containing_service=None,
    input_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._VIRUSAVAILABILITYREQUEST,
    output_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._VIRUSAVAILABILITY,
    serialized_options=b'\302\360\031\276\002\n\245\001\010\001\022+/v2alpha/virus/accession/{accessions}/check*$Check available viruses by accession2\027Check available viruses:\034virus_accession_availabilityB\005Virusr\020application/json\n\223\001\010\002\022\024/v2alpha/virus/check*$Check available viruses by accession2\027Check available viruses:!virus_accession_availability_postB\005Virusr\020application/json',
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_VIRUSDATASET)

DESCRIPTOR.services_by_name['VirusDataset'] = _VIRUSDATASET


_HTTPDATAFILE = _descriptor.ServiceDescriptor(
  name='HttpDatafile',
  full_name='ncbi.datasets.v2.HttpDatafile',
  file=DESCRIPTOR,
  index=5,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=19784,
  serialized_end=19935,
  methods=[
  _descriptor.MethodDescriptor(
    name='Fetch',
    full_name='ncbi.datasets.v2.HttpDatafile.Fetch',
    index=0,
    containing_service=None,
    input_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._METHODPAYLOADREQUEST,
    output_type=google_dot_protobuf_dot_wrappers__pb2._BYTESVALUE,
    serialized_options=b'\302\360\0312\n0\010\001\"\033/fetch_h/{method}/{payload}r\017application/zip',
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_HTTPDATAFILE)

DESCRIPTOR.services_by_name['HttpDatafile'] = _HTTPDATAFILE


_TAXONOMYDATASET = _descriptor.ServiceDescriptor(
  name='TaxonomyDataset',
  full_name='ncbi.datasets.v2.TaxonomyDataset',
  file=DESCRIPTOR,
  index=6,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=19938,
  serialized_end=21994,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetTaxonomyMetadataFor',
    full_name='ncbi.datasets.v2.TaxonomyDataset.GetTaxonomyMetadataFor',
    index=0,
    containing_service=None,
    input_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._TAXONOMYMETADATAREQUEST,
    output_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._TAXONOMYMETADATARESPONSE,
    serialized_options=b'\302\360\031\242\005\n\317\002\010\001\022 /v2alpha/taxonomy/taxon/{taxons}*3Use taxonomic identifiers to get taxonomic metadata2\326\001Using NCBI Taxonomy IDs or names (common or scientific) at any rank, get metadata about a taxonomic node including taxonomic identifiers, lineage information, child nodes, and gene and genome counts in JSON format.:\021taxonomy_metadataB\010Taxonomy\n\315\002\010\002\022\021/v2alpha/taxonomy*;Use taxonomic identifiers to get taxonomic metadata by post2\326\001Using NCBI Taxonomy IDs or names (common or scientific) at any rank, get metadata about a taxonomic node including taxonomic identifiers, lineage information, child nodes, and gene and genome counts in JSON format.:\026taxonomy_metadata_postB\010Taxonomy',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetMinimumFilteredSubtree',
    full_name='ncbi.datasets.v2.TaxonomyDataset.GetMinimumFilteredSubtree',
    index=1,
    containing_service=None,
    input_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._TAXONOMYFILTEREDSUBTREEREQUEST,
    output_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._TAXONOMYFILTEREDSUBTREERESPONSE,
    serialized_options=b'\302\360\031\354\005\n\364\002\010\001\0221/v2alpha/taxonomy/taxon/{taxons}/filtered_subtree*=Use taxonomic identifiers to get a filtered taxonomic subtree2\330\001Using NCBI Taxonomy IDs or names (common or scientific) at any rank, get a filtered taxonomic subtree that includes the full parent lineage and all immediate children from the selected taxonomic ranks in JSON format.:\031taxonomy_filtered_subtreeB\010Taxonomy\n\362\002\010\002\022\"/v2alpha/taxonomy/filtered_subtree*EUse taxonomic identifiers to get a filtered taxonomic subtree by post2\330\001Using NCBI Taxonomy IDs or names (common or scientific) at any rank, get a filtered taxonomic subtree that includes the full parent lineage and all immediate children from the selected taxonomic ranks in JSON format.:\036taxonomy_filtered_subtree_postB\010Taxonomy',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetOrganismsThatMatch',
    full_name='ncbi.datasets.v2.TaxonomyDataset.GetOrganismsThatMatch',
    index=2,
    containing_service=None,
    input_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._ORGANISMQUERYREQUEST,
    output_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._SCINAMEANDIDS,
    serialized_options=b'\302\360\031\371\001\n\366\001\010\001\022-/v2alpha/taxonomy/taxon_suggest/{taxon_query}*CGet a list of taxonomy names and IDs given a partial taxonomic name2dThis endpoint retrieves a list of taxonomy names and IDs given a partial taxonomic name of any rank.:\016tax_name_queryB\010Taxonomy',
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_TAXONOMYDATASET)

DESCRIPTOR.services_by_name['TaxonomyDataset'] = _TAXONOMYDATASET


_GENOMEANNOTATIONDATASET = _descriptor.ServiceDescriptor(
  name='GenomeAnnotationDataset',
  full_name='ncbi.datasets.v2.GenomeAnnotationDataset',
  file=DESCRIPTOR,
  index=7,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=21997,
  serialized_end=24710,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetGenomeAnnotations',
    full_name='ncbi.datasets.v2.GenomeAnnotationDataset.GetGenomeAnnotations',
    index=0,
    containing_service=None,
    input_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._GENOMEANNOTATIONREQUEST,
    output_type=ncbi_dot_datasets_dot_v2_dot_reports_dot_feature__pb2._GENOMEANNOTATIONREPORTPAGE,
    serialized_options=b'\302\360\031\375\006\n\330\003\010\001\032./v2alpha/genome/accession/{accession}/features\"7/v2alpha/genome/accession/{accession}/annotation_report*1Get genome annotation reports by genome accession2\253\001Get genome annotation reports by genome accession.  By default, in paged JSON format, but also available as tabular (accept: x-tabular) or json-lines (accept: x-jsonlines):\030genome_annotation_reportB\006GenomeJ\004sortJ\027include_annotation_typeZ\032v2reportsFeatureDescriptorh\001r\020application/jsonr\031text/tab-separated-values\n\237\003\010\002\032\"/v2alpha/genome/accession/features\"!/v2alpha/genome/annotation_report*1Get genome annotation reports by genome accession2\253\001Get genome annotation reports by genome accession.  By default, in paged JSON format, but also available as tabular (accept: x-tabular) or json-lines (accept: x-jsonlines): genome_annotation_report_by_postB\006GenomeZ\032v2reportsFeatureDescriptorh\001r\020application/jsonr\031text/tab-separated-values',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetGenomeAnnotationSummary',
    full_name='ncbi.datasets.v2.GenomeAnnotationDataset.GetGenomeAnnotationSummary',
    index=1,
    containing_service=None,
    input_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._GENOMEANNOTATIONREQUEST,
    output_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._GENOMEANNOTATIONTABLESUMMARYREPLY,
    serialized_options=b'\302\360\031\261\006\n\202\004\010\001\0325/v2alpha/genome/accession/{accession}/feature_summary\"L/v2alpha/genome/accession/{accession}/id/{annotation_ids}/annotation_summary*0Get genome annotation report summary information2zGet genome annotation report summary information by genome accession. The return facets can be used in subsequent queries.:\030annotation_report_facetsB\006GenomeJ\007symbolsJ\013chromosomesJ\tlocationsJ\ngene_typesJ\013search_textJ\005queryJ\004sortJ\tpage_sizeJ\npage_tokenJ\014table_fieldsJ\014table_formatJ\026include_tabular_headerJ\027include_annotation_type\n\251\002\010\002\032)/v2alpha/genome/accession/feature_summary\"\"/v2alpha/genome/annotation_summary*0Get genome annotation report summary information2zGet genome annotation report summary information by genome accession. The return facets can be used in subsequent queries.: annotation_report_facets_by_postB\006Genome',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetDownloadSummary',
    full_name='ncbi.datasets.v2.GenomeAnnotationDataset.GetDownloadSummary',
    index=2,
    containing_service=None,
    input_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._GENOMEANNOTATIONREQUEST,
    output_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._DOWNLOADSUMMARY,
    serialized_options=b'\302\360\031\334\004\n\375\001\010\001\"H/v2alpha/genome/accession/{accession}/annotation_report/download_summary* Preview feature dataset download2DGet a download feature summary by accession in a JSON output format.:\"genome_annotation_download_summaryB\006GenomeJ\tpage_sizeJ\npage_tokenJ\004sort\n\331\002\010\002\"2/v2alpha/genome/annotation_report/download_summary* Preview feature download by POST2\312\001The \'GET\' version of feature download summary is limited by the size of the GET URL (2KB).  The POST operation is provided to allow users to supply a larger number of annotation_ids in a single request.:*genome_annotation_download_summary_by_postB\006Genome',
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_GENOMEANNOTATIONDATASET)

DESCRIPTOR.services_by_name['GenomeAnnotationDataset'] = _GENOMEANNOTATIONDATASET


_TAXONOMYCPPDATASET = _descriptor.ServiceDescriptor(
  name='TaxonomyCppDataset',
  full_name='ncbi.datasets.v2.TaxonomyCppDataset',
  file=DESCRIPTOR,
  index=8,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=24713,
  serialized_end=26430,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetTaxonomyMetadataFor',
    full_name='ncbi.datasets.v2.TaxonomyCppDataset.GetTaxonomyMetadataFor',
    index=0,
    containing_service=None,
    input_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._TAXONOMYMETADATAREQUEST,
    output_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._TAXONOMYMETADATARESPONSE,
    serialized_options=b'\302\360\031\254\005\n\321\002\010\001\"!/v2alpha/taxonomy/taxon2/{taxons}*3Use taxonomic identifiers to get taxonomic metadata2\326\001Using NCBI Taxonomy IDs or names (common or scientific) at any rank, get metadata about a taxonomic node including taxonomic identifiers, lineage information, child nodes, and gene and genome counts in JSON format.:\022taxonomy_metadata2B\010Taxonomy\n\325\002\010\002\"\030/v2alpha/taxonomy/taxon2*;Use taxonomic identifiers to get taxonomic metadata by post2\326\001Using NCBI Taxonomy IDs or names (common or scientific) at any rank, get metadata about a taxonomic node including taxonomic identifiers, lineage information, child nodes, and gene and genome counts in JSON format.:\027taxonomy_metadata_post2B\010Taxonomy',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetMinimumFilteredSubtree',
    full_name='ncbi.datasets.v2.TaxonomyCppDataset.GetMinimumFilteredSubtree',
    index=1,
    containing_service=None,
    input_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._TAXONOMYFILTEREDSUBTREEREQUEST,
    output_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._TAXONOMYFILTEREDSUBTREERESPONSE,
    serialized_options=b'\302\360\031\360\005\n\366\002\010\001\0222/v2alpha/taxonomy/taxon/{taxons}/filtered_subtree2*=Use taxonomic identifiers to get a filtered taxonomic subtree2\330\001Using NCBI Taxonomy IDs or names (common or scientific) at any rank, get a filtered taxonomic subtree that includes the full parent lineage and all immediate children from the selected taxonomic ranks in JSON format.:\032taxonomy_filtered_subtree2B\010Taxonomy\n\364\002\010\002\022#/v2alpha/taxonomy/filtered_subtree2*EUse taxonomic identifiers to get a filtered taxonomic subtree by post2\330\001Using NCBI Taxonomy IDs or names (common or scientific) at any rank, get a filtered taxonomic subtree that includes the full parent lineage and all immediate children from the selected taxonomic ranks in JSON format.:\037taxonomy_filtered_subtree_post2B\010Taxonomy',
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_TAXONOMYCPPDATASET)

DESCRIPTOR.services_by_name['TaxonomyCppDataset'] = _TAXONOMYCPPDATASET


_GATEWAY = _descriptor.ServiceDescriptor(
  name='Gateway',
  full_name='ncbi.datasets.v2.Gateway',
  file=DESCRIPTOR,
  index=9,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=26433,
  serialized_end=26650,
  methods=[
  _descriptor.MethodDescriptor(
    name='Version',
    full_name='ncbi.datasets.v2.Gateway.Version',
    index=0,
    containing_service=None,
    input_type=google_dot_protobuf_dot_empty__pb2._EMPTY,
    output_type=ncbi_dot_datasets_dot_v2_dot_datasets__pb2._VERSIONREPLY,
    serialized_options=b'\302\360\031\204\001\n\201\001\010\001\022\010/version\032\020/v2alpha/version*\030Retrieve service version25Retrieve the latest version of the Datasets services.:\007versionB\007Version',
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_GATEWAY)

DESCRIPTOR.services_by_name['Gateway'] = _GATEWAY

# @@protoc_insertion_point(module_scope)
